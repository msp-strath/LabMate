ret > ExitSuccess
out > %{
out > > input readFromFile
out > ivals :
out >   nlayer : contains the @number of layers (2 or 3) in the sample
out >   tflash : duration of laser flash in @ms
out >   cps : specific heat capacities in @J kg^-1 K^-1
out >       - of the front face
out >       - of the rear face
out >       - of the curved side face
out >   rs : heat transfer coefficient for losses in  @W m^-2 K^-1
out >       - from front face
out >       - from rear face
out >       - curved side face
out >   kappas : contains radius of
out >       - sample (in @cm)
out >       - laser (in @mm)
out >       - measuring (in @mm)
out >   lams   : array of thermal conductivities of layer @nlayer (in @W m^-2 K^-1)
out > %}
out > %<{
out > function ivals = readFromFile(fname);
out > f1 = fopen(fname);
out > c1 = textscan(f1, `%f`);
out > src = c1{1};
out > fclose(f1);
out > readPtr = 1;
out > ivals.nlayer = src[readPtr];
out > readPtr = readPtr + 1;
out > ivals.tflash = 1e-3 * src[readPtr];
out > readPtr = readPtr + 1;
out > for i = 1:3
out >     ivals.cps[i] = src[readPtr + i];
out >     ivals.rs[i] = 1e3 * src[readPtr + i];
out > end
out > readPtr = readPtr + 6;
out > ivals.kappas[1] = 1e-2 * src[readPtr + 1];
out > for i = 2:3
out >     ivals.kappas[i] = 1e-3 * src[readPtr + i];
out > end
out > readPtr = readPtr + 3;
out > for i = 1:ivals.nlayer
out >     ivals.lams[i] = 1e3 * src[readPtr + i];
out > end
out >
out > %<}
out >
out >
